<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(TargetFrameworkForNETSDK)</TargetFramework>
    <DefaultItemExcludes>$(DefaultItemExcludes);testassets\**\*</DefaultItemExcludes>

    <!-- Delete the following line. once versioning is implemented -->
    <PackageVersion>$(Version)</PackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Common\Arkarin0.Arcade.Common\Arkarin0.Arcade.Common.csproj" />
    <ProjectReference Include="..\Common\Arkarin0.Arcade.Test.Common\Arkarin0.Arcade.Test.Common.csproj" />
    <ProjectReference Include="..\Arkarin0.DotNet.Arcade.Sdk\Arkarin0.DotNet.Arcade.Sdk.csproj" />
    <ProjectReference Include="..\Arkarin0.DotNet.Internal.DependencyInjection.Testing\Arkarin0.DotNet.Internal.DependencyInjection.Testing.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FluentAssertions" />
    <PackageReference Include="Microsoft.Build" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" />
    <PackageReference Include="Moq" />

    <!-- This is here so that we agree with the project's transitive references to NewtonSoft.Json -->
    <PackageReference Include="Newtonsoft.Json" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Include="testassets\**\*" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(RepoRoot)eng\common\**\*" LinkBase="testassets\boilerplate\eng\common\" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(RepoRoot)build.sh" LinkBase="testassets\boilerplate\" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(RepoRoot)Build.cmd" LinkBase="testassets\boilerplate\" CopyToOutputDirectory="PreserveNewest" />
    
    <!--Remove me onces Versioning is implemented-->
    <Content Include="$(RepoRoot)eng\build*" LinkBase="testassets\boilerplate\eng\" CopyToOutputDirectory="PreserveNewest" />
    <!--<Content Include="$(RepoRoot).dotnet\**" LinkBase="testassets\boilerplate\.dotnet\" CopyToOutputDirectory="PreserveNewest" />-->
    <Content Include="$(RepoRoot).tools\**" LinkBase="testassets\boilerplate\.tools\" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>NuGetPackageRoot</_Parameter1>
      <_Parameter2>$(NuGetPackageRoot)</_Parameter2>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>PackageVersion</_Parameter1>
      <_Parameter2>$(PackageVersion)</_Parameter2>
    </AssemblyAttribute>
    <!-- Captures the logs from functional test. Useful for debugging test failures when developing Arcade SDK features. -->
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>LogOutputDir</_Parameter1>
      <_Parameter2>$(ArtifactsLogDir)tests\</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

  <Target Name="GenerateTestGlobalJson" AfterTargets="CopyFilesToOutputDirectory">
    <PropertyGroup>
      <GlobalJsonContent>
        {
          "tools": {
            "dotnet": "$(NETCoreSdkVersion)",
            "vs": {
              "version": "16.9"
            }
          },
          "msbuild-sdks": {
            "Arkarin0.DotNet.Arcade.Sdk": "$(PackageVersion)"
          }
        }
      </GlobalJsonContent>
    </PropertyGroup>
    <WriteLinesToFile Lines="$(GlobalJsonContent)" File="$(TargetDir)testassets\boilerplate\global.json" Overwrite="true" />
  </Target>

  <Target Name="GenerateTestNuGetConfig" AfterTargets="CopyFilesToOutputDirectory">
    <PropertyGroup>
      <TestNuGetConfigContent>
<![CDATA[
<configuration>
  <config>
    <clear/>
    <add key="globalPackagesFolder" value=".packages" />
  </config>
  <packageSources>
    <clear />    
    <add key="deleteMe" value="$(RepoRoot)artifacts\packages\Release\Release" />
    <add key="deleteMe2" value="$(RepoRoot)artifacts\packages\Release\PerBuildPreRelease" />
    <add key="deleteMe3" value="$(PackageOutputPath)" />
    <!--<add key="non-shipping arcade" value="$(ArtifactsNonShippingPackagesDir)" />-->
    <!--<add key="shipping arcade" value="$(ArtifactsShippingPackagesDir)" />-->
    <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>
</configuration>
]]>
      </TestNuGetConfigContent>
    </PropertyGroup>
    <WriteLinesToFile Lines="$(TestNuGetConfigContent)" File="$(TargetDir)testassets\boilerplate\NuGet.config" Overwrite="true" />

    <PropertyGroup>
      <_packageReleaseDir>$(RepoRoot)artifacts\packages\Release\Release</_packageReleaseDir>
    </PropertyGroup>
    <MakeDir Directories="$(_packageReleaseDir)" Condition="!Exists('$(_packageReleaseDir)')" />

    <PropertyGroup>
      <_packagePerBuildPreReleaseDir>$(RepoRoot)artifacts\packages\Release\PerBuildPreRelease</_packagePerBuildPreReleaseDir>
    </PropertyGroup>
    <MakeDir Directories="$(_packagePerBuildPreReleaseDir)" Condition="!Exists('$(_packagePerBuildPreReleaseDir)')" />
  </Target>
</Project>
